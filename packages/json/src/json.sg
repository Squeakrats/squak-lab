{
#include "AST.h"
}

[
    <LeftBrace> ::= <{>;
    <RightBrace> ::= <}>;
    <Colon> ::= <:>;
    <Comma> ::= <,>;
    <True> ::= <true>;
    <False> ::= <false>;
    <StringLiteral> ::= <\"[^\"]*\">;
    <> ::= <[\t\n ]>;
]

<JSON> {std::shared_ptr<AST::Object>} ::= <Object> <EndOfFile> { return P0; };

<Object> {std::shared_ptr<AST::Object>} ::= <LeftBrace> <ObjectEntries> <RightBrace> { return std::make_shared<AST::Object>(P1); };

<ObjectEntries> {std::shared_ptr<AST::ObjectEntries>} ::= <ObjectEntry> <OptionalComma> <ObjectEntries> { return std::make_shared<AST::ObjectEntries>(P0, P2); };

<ObjectEntry> {std::shared_ptr<AST::ObjectEntry>} ::= <StringLiteral> <Colon> <Value> { return std::make_shared<AST::ObjectEntry>(P0.second, P2); };

<OptionalComma> {void*} ::= <Comma> { return nullptr; };

<Value> {std::shared_ptr<AST::Value>} ::= <True> { return std::make_shared<AST::Value>(true); }
                  | <False> { return std::make_shared<AST::Value>(false); }
                  | <StringLiteral> { return std::make_shared<AST::Value>(P0.second); }
                  | <NumberLiteral> { return nullptr; };
